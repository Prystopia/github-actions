name: "test-functions"

on:
   # push: #trigger on push
    workflow_dispatch: #manual trigger
      inputs: # inputs can be taken from PR tags, as cannot define inputs for auto triggered items
        skip-deploy: 
            type: boolean
            description: This is a test to show the inputs in action
            default: false
        reason: 
            type: string
            description: Please enter the reason for triggering this workflow
            required: true
        environment:
            type: environment
            required: true
        selection:
            type: choice
            options:
                - v1
                - v2
                - v3
            required: false
jobs:
    send-message:
        runs-on: ubuntu-latest
        outputs:
            message-text: ${{ steps.send-message.outputs.message }} #name of output doesn't have to match
        steps:
            - name: "send-message"
              id: "send-message" # required to refer to step in brackets above
              run: echo "message=${{ inputs.reason }}" >> "$GITHUB_OUTPUT"
            - name: "see files"
              run: ls -R                
    get-code:
        runs-on: ubuntu-latest
        defaults:
            run: 
                working-directory: react-app
        continue-on-error: true #ignores errors in this job and allows following items to be run
        environment: ${{ inputs.environment }}
        steps:
            - name: checkout
              uses: actions/checkout@v4
            - name: setup node
              uses: actions/setup-node@v3
              with: 
                node-version: "20.x"
            - name: cache #this automatically handles checking and adding the value to the cache
              uses: actions/cache@v3
              id: cache
              with: 
                key: deps-node-modules-${{ hashFiles('react-app/package-lock.json')}} #can use wildcards
                path: node_modules
            - name: install deps
              if: ${{ !steps.cache.outputs.cache-hit }}
              run: npm ci
            - name: build
              run: npm run build
            - name: publish
              uses: actions/upload-artifact@v4
              with:
                name: app
                path: react-app/build
            #- name: "custom step"
            #  run: test-custom-action
            - name: "first-step"
              run: | #pipe allows multi-line run statements
                echo "this is a test ${{ inputs.skip-deploy }}"
                echo "second line"
            - name: "sleep-5"
              run: sleep 5 #sleeps the job for specified amount (5)
            - name: "always-runs"
              if: ${{ always() }}
              run: echo "this step will run"
            - name: "if test-input"
              if: ${{ inputs.skip-deploy }}
              run: exit 1
            - name: "optional-step"
              if: ${{ success() }}
              run: echo "this will somethings happen, depending on the input"
    build-code:
        needs: 
          - get-code #runs this job sequentially after the first job
          - send-message
        runs-on: ubuntu-latest
        steps:
            - name: "first-step"
              run: echo "this is a test ${{ needs.send-message.outputs.message-text }}" #refer to output name here, not variable key name
            - name: "unreachable-step"
              if: ${{ success() }}
              run: echo "this will never happen"
            - name: "always-runs"
              if: ${{ always() }}
              run: echo "this step will run"
    test:
      needs:
        - build-code
      runs-on: ubuntu-latest
      steps:
        - name: "first-step"
          run: echo "requires all steps to be successful"
